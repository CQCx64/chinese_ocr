# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ocr.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

import cv2
import numpy as np
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QMessageBox, QWidget, QFileDialog
import pyperclip
import utils

IMAGE_PATH = ''


class Ui_OCR(QWidget):
    def start(self):
        start_flag = True
        self.ocr_core, self.std_core = utils.start_engine()
        if self.ocr_core is None or self.std_core is None:
            button = QMessageBox.warning(self, "错误！", "未找到预加载模型，请检查模型是否存在，即将退出！",
                                         QMessageBox.Yes | QMessageBox.Yes)
            if button == QMessageBox.Yes:
                start_flag = False

        return start_flag

    def setupUi(self, OCR):
        OCR.setObjectName("OCR")
        OCR.setWindowIcon(QIcon('ocr.ico'))
        OCR.resize(1212, 810)
        self.centralwidget = QtWidgets.QWidget(OCR)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.line = QtWidgets.QFrame(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.line.sizePolicy().hasHeightForWidth())
        self.line.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.line.setFont(font)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout.addWidget(self.line, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(10, 20, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 6, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(15, 20, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 4, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(15, 10, QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 0, 2, 1, 1)
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.pb_upload = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pb_upload.sizePolicy().hasHeightForWidth())
        self.pb_upload.setSizePolicy(sizePolicy)
        self.pb_upload.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.pb_upload.setFont(font)
        self.pb_upload.setObjectName("pb_upload")
        self.verticalLayout.addWidget(self.pb_upload)
        self.verticalLayout_4.addLayout(self.verticalLayout)
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout_4.addItem(spacerItem3)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_3.sizePolicy().hasHeightForWidth())
        self.label_3.setSizePolicy(sizePolicy)
        self.label_3.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setObjectName("checkBox")
        self.verticalLayout_2.addWidget(self.checkBox)
        self.pb_word = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pb_word.sizePolicy().hasHeightForWidth())
        self.pb_word.setSizePolicy(sizePolicy)
        self.pb_word.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.pb_word.setFont(font)
        self.pb_word.setObjectName("pb_word")
        self.verticalLayout_2.addWidget(self.pb_word)
        self.pb_photo = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pb_photo.sizePolicy().hasHeightForWidth())
        self.pb_photo.setSizePolicy(sizePolicy)
        self.pb_photo.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.pb_photo.setFont(font)
        self.pb_photo.setObjectName("pb_photo")
        self.verticalLayout_2.addWidget(self.pb_photo)
        self.verticalLayout_4.addLayout(self.verticalLayout_2)
        spacerItem4 = QtWidgets.QSpacerItem(20, 10, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        self.verticalLayout_4.addItem(spacerItem4)
        self.verticalLayout_3 = QtWidgets.QVBoxLayout()
        self.verticalLayout_3.setObjectName("verticalLayout_3")

        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_4.sizePolicy().hasHeightForWidth())
        self.label_4.setSizePolicy(sizePolicy)
        self.label_4.setMaximumSize(QtCore.QSize(16777215, 50))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.pb_copy = QtWidgets.QPushButton(self.centralwidget)
        self.pb_copy.setMaximumSize(QtCore.QSize(16777215, 40))
        self.pb_copy.setObjectName("pb_copy")
        self.verticalLayout_3.addWidget(self.pb_copy)
        self.pb_save = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pb_save.sizePolicy().hasHeightForWidth())
        self.pb_save.setSizePolicy(sizePolicy)
        self.pb_save.setMaximumSize(QtCore.QSize(16777215, 40))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.pb_copy.setFont(font)
        self.checkBox.setFont(font)
        self.pb_save.setFont(font)
        self.pb_save.setObjectName("pb_save")
        self.verticalLayout_3.addWidget(self.pb_save)
        self.verticalLayout_4.addLayout(self.verticalLayout_3)
        self.gridLayout.addLayout(self.verticalLayout_4, 0, 1, 1, 1)
        self.verticalLayout_5 = QtWidgets.QVBoxLayout()
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_image = QtWidgets.QLabel(self.centralwidget)
        self.label_image.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_image.sizePolicy().hasHeightForWidth())
        self.label_image.setSizePolicy(sizePolicy)
        self.label_image.setMinimumSize(QtCore.QSize(0, 0))
        self.label_image.setMaximumSize(QtCore.QSize(16777215, 720))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.label_image.setFont(font)
        self.label_image.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_image.setText("")
        self.label_image.setAlignment(QtCore.Qt.AlignCenter)
        self.label_image.setWordWrap(False)
        self.label_image.setObjectName("label_image")
        self.verticalLayout_5.addWidget(self.label_image)
        spacerItem5 = QtWidgets.QSpacerItem(20, 20, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        self.verticalLayout_5.addItem(spacerItem5)
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_5.addWidget(self.label_5)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setEnabled(False)
        self.textEdit.setMaximumSize(QtCore.QSize(16777215, 300))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(11)
        self.textEdit.setFont(font)
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout_5.addWidget(self.textEdit)
        self.gridLayout.addLayout(self.verticalLayout_5, 0, 5, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(10, 10, QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem6, 0, 0, 1, 1)
        OCR.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(OCR)
        self.statusbar.setObjectName("statusbar")
        OCR.setStatusBar(self.statusbar)

        self.retranslateUi(OCR)
        QtCore.QMetaObject.connectSlotsByName(OCR)

        self.statusbar.showMessage('初始化完成，欢迎使用。')
        self.pb_upload.clicked.connect(self.upload_img)
        self.pb_word.clicked.connect(self.word_predict)
        self.pb_photo.clicked.connect(self.photo_predict)
        self.pb_copy.clicked.connect(self.copy_res)
        self.pb_save.clicked.connect(self.save_res)

        self.pb_word.setEnabled(False)
        self.pb_photo.setEnabled(False)
        self.pb_copy.setEnabled(False)
        self.pb_save.setEnabled(False)
        self.checkBox.setEnabled(False)



    def retranslateUi(self, OCR):
        _translate = QtCore.QCoreApplication.translate
        OCR.setWindowTitle(_translate("OCR", "OCR"))
        self.label.setText(_translate("OCR", "Step1  上传识别的图片"))
        self.pb_upload.setText(_translate("OCR", "选择图片"))
        self.label_3.setText(_translate("OCR", "Step2  选择图片场景并识别"))
        self.pb_word.setText(_translate("OCR", "印刷体"))
        self.pb_photo.setText(_translate("OCR", "生活场景照片(仅供参考)"))
        self.label_4.setText(_translate("OCR", "Step3  保存与导出"))
        self.pb_save.setText(_translate("OCR", "保存"))
        self.label_5.setText(_translate("OCR", "识别结果："))
        self.checkBox.setText(_translate("OCR", "按原图换行"))
        self.pb_copy.setText(_translate("OCR", "复制结果"))

    def upload_img(self):
        global IMAGE_PATH
        imgName, imgType = QFileDialog.getOpenFileName(QWidget(), "打开图片", "./images",
                                                       "*.png;;*.jpg;;All Files(*)")

        # if not utils.has_chinese(imgName):
        #     IMAGE_PATH = imgName
        #     if IMAGE_PATH != '':
        #         self.label_image.setPixmap(jpg)
        #         self.statusbar.showMessage('当前图片：' + IMAGE_PATH)
        #         print('当前图片：' + IMAGE_PATH)
        # else:
        #     button = QMessageBox.warning(self, "检查中文！", imgName + '\n' + "图片路径中包含中文，无法读取，请更改路径至纯英文！",
        #                                  QMessageBox.Ok | QMessageBox.Ok)
        #     if button == QMessageBox.Ok:
        #         self.close()
        if IMAGE_PATH != imgName and imgName != '':
            IMAGE_PATH = imgName

        if IMAGE_PATH != '':
            img = cv2.imdecode(np.fromfile(IMAGE_PATH, dtype=np.uint8), -1)
            img_height, img_width = img.shape[:-1]
            if img_width >= img_height:
                jpg = QtGui.QPixmap(IMAGE_PATH).scaled(self.label_image.width(),
                                                    self.label_image.width() / img_width * img_height)
            else:
                jpg = QtGui.QPixmap(IMAGE_PATH).scaled(self.label_image.height() / img_height * img_width,
                                                    self.label_image.height())
            self.label_image.setPixmap(jpg)
            self.statusbar.showMessage('当前图片：' + IMAGE_PATH)
            print('当前图片：' + IMAGE_PATH)

            self.pb_word.setEnabled(True)
            self.pb_photo.setEnabled(True)
            self.checkBox.setEnabled(True)

        # TODO: 图片的预处理 裁切、旋转等
        # img = cv2.imread(IMAGE_PATH)
        # cv2.imshow('Image operation', img)
        # cv2.waitKey(0)
        # cv2.destroyAllWindows()

    def word_predict(self):
        self.statusbar.showMessage('正在检测与识别中...')
        print(IMAGE_PATH)
        img = cv2.imdecode(np.fromfile(IMAGE_PATH, dtype=np.uint8), -1)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img = np.array(img)

        res = self.ocr_core.ocr(img)

        res = self.sentence_transform(res)
        self.textEdit.setEnabled(True)
        self.textEdit.setText(str(res))
        self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 识别完成！')
        print('结果:', str(res).strip())

        if str(res).strip() == '':
            self.pb_copy.setEnabled(False)
            self.pb_save.setEnabled(False)
            self.textEdit.setEnabled(False)
            self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 未识别出结果！')
            button = QMessageBox.information(self, "询问", "未识别出文字，查看图片是否为印刷体，按Ok按钮即将尝试使用场景照片检测功能",
                                             QMessageBox.Ok | QMessageBox.No, QMessageBox.No)
            if button == QMessageBox.No:
                self.close()
            else:
                self.photo_predict()
        else:
            self.pb_copy.setEnabled(True)
            self.pb_save.setEnabled(True)

    def photo_predict(self):
        self.statusbar.showMessage('正在检测与识别中...')
        print(IMAGE_PATH)
        img = cv2.imdecode(np.fromfile(IMAGE_PATH, dtype=np.uint8), -1)
        img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
        img = np.array(img)

        box_info_list = self.std_core.detect(img)

        res = []
        for box_info in box_info_list:
            cropped_img = box_info['cropped_img']  # 检测出的文本框
            ocr_res = self.ocr_core.ocr_for_single_line(cropped_img)

            res.append(ocr_res)

        res = self.sentence_transform(res)
        print('结果: ', res)
        self.textEdit.setEnabled(True)
        self.textEdit.setText(res)
        self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 识别完成！')

        if str(res).strip() == '':
            self.pb_copy.setEnabled(False)
            self.pb_save.setEnabled(False)
            self.textEdit.setEnabled(False)
            self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 未识别出结果！')
            button = QMessageBox.information(self, "询问", "未识别出文字，查看图片是否为场景照片或截图，按Ok按钮即将尝试使用印刷体检测功能",
                                             QMessageBox.Ok | QMessageBox.No, QMessageBox.No)
            if button == QMessageBox.No:
                self.close()
            else:
                self.word_predict()
        else:
            self.pb_copy.setEnabled(True)
            self.pb_save.setEnabled(True)

    def copy_res(self):
        pyperclip.copy(self.textEdit.toPlainText())
        self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 识别结果已复制至剪贴板！')

    def save_res(self):
        dir_path = QFileDialog.getExistingDirectory(self, "选择保存目录", "./output")
        if dir_path != '':
            save_path = dir_path + '/' + os.path.split(IMAGE_PATH)[-1] + '识别结果.txt'
            print(save_path)
            f = open(save_path, 'w')
            f.write('---------------------' + IMAGE_PATH + ' 识别结果' + '---------------------\n\n\n')
            for line in self.textEdit.toPlainText():
                f.write(line)
            f.close()
            self.statusbar.showMessage('当前图片：' + IMAGE_PATH + ' 识别结果已保存至 ' + save_path)

    def sentence_transform(self, res_list):
        res_str = ''
        for line in res_list:
            for word in line:
                res_str += word
            if self.checkBox.isChecked():
                res_str += '\n'
        return res_str
